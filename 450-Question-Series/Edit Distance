// Question CODE: Edit Distance
// Question: Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.
 // You have the following three operations permitted on a word:
 // Insert a character
 // Delete a character
 // Replace a character
/* Input:
 Input contains number of testcases, two strings for each testcase
 Sample Input 1:
  1
a = "horse", b = "ros"
*/
/* Output:
The only line of the output prints the minimum number of operations required to convert a to b.
Sample Output 1:
3
Explanation Of Sample Input 1:
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')
*/




#include <bits/stdc++.h>
using namespace std;

int minDistance(string A, string B) 
{
    int n = A.size();
    int m = B.size();
    int dp[n+1][m+1];
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=m;j++)
        {
            if(i==0 || j==0)
                dp[i][j] = max(i,j);
            else if(A[i-1]==B[j-1])
                dp[i][j] = dp[i-1][j-1];
            else    
                dp[i][j] = 1+min({dp[i-1][j-1],dp[i-1][j],dp[i][j-1]});
        }
    }
    return  dp[n][m];
}

int main() 
{    
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    int tc;
    cin>>tc;
    while(tc--)
    {
        string a,b;
        cin>>a>>b;
        cout<<minDistance(a,b)<<endl;
    }

    return 0;
}
