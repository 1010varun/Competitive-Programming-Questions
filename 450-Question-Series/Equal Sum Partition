// Question CODE: Partition Equal Subset Sum
// Question: Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such 
//that the sum of elements in both subsets is equal.
/* Input:
 Input contains number of testcases, size of a vector n and a vector for each testcase
 Sample Input 1:
  1
  4
  1 5 11 5
*/
/* Output:
The only line of the output prints true or false.
Sample Output 1:
true
Explanation Of Sample Input 1:
{1,5,5} and {11}

*/




#include <bits/stdc++.h>
using namespace std;

bool canPartition(vector<int>& nums) 
{
    int sum=0;
    for(auto &i:nums)
        sum+=i;
    if(sum%2)
        return false;
    sum/=2;
    vector<bool> dp(sum+1,false);
    dp[0] = true;
    for(auto &i:nums)
    {
        for(int j=sum;j>=i;j--)
            dp[j] = (dp[j]||dp[j-i]);
    }
    return dp[sum];
}

int main() 
{    
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    int tc;
    cin>>tc;
    while(tc--)
    {
        int n;
        cin>>n;
        vector<int> vec(n);
        for(int i=0;i<n;i++)
        {
            cin>>vec[i];
        }
        cout<<canPartition(vec)<<endl;
    }

    return 0;
}
